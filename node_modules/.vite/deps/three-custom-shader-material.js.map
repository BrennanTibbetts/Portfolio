{
  "version": 3,
  "sources": ["../../three-custom-shader-material/dist/three-custom-shader-material.esm.js"],
  "sourcesContent": ["import { _ as _objectWithoutProperties, C as CustomShaderMaterial$1, a as _objectSpread2 } from './vanilla-307d3a93.esm.js';\r\nimport * as React from 'react';\r\nimport 'object-hash';\r\nimport 'three';\r\nimport 'glsl-tokenizer';\r\nimport 'glsl-token-string';\r\nimport 'glsl-token-functions';\r\n\r\nfunction _extends() {\r\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\r\n    for (var i = 1; i < arguments.length; i++) {\r\n      var source = arguments[i];\r\n      for (var key in source) {\r\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\r\n          target[key] = source[key];\r\n        }\r\n      }\r\n    }\r\n    return target;\r\n  };\r\n  return _extends.apply(this, arguments);\r\n}\r\n\r\nvar _excluded = [\"baseMaterial\", \"fragmentShader\", \"vertexShader\", \"uniforms\", \"cacheKey\", \"attach\"];\r\n// function useDidUpdateEffect(fn: (...opts: any[]) => any, inputs: React.DependencyList) {\r\n//   const didMountRef = React.useRef(false)\r\n\r\n//   React.useEffect(() => {\r\n//     if (didMountRef.current) {\r\n//       return fn()\r\n//     }\r\n//     didMountRef.current = true\r\n//   }, inputs)\r\n// }\r\nvar CustomShaderMaterial = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\r\n  var baseMaterial = _ref.baseMaterial,\r\n    fragmentShader = _ref.fragmentShader,\r\n    vertexShader = _ref.vertexShader,\r\n    uniforms = _ref.uniforms,\r\n    cacheKey = _ref.cacheKey,\r\n    _ref$attach = _ref.attach,\r\n    attach = _ref$attach === void 0 ? 'material' : _ref$attach,\r\n    props = _objectWithoutProperties(_ref, _excluded);\r\n  var updateProps = React.useMemo(function () {\r\n    return {\r\n      fragmentShader: fragmentShader,\r\n      vertexShader: vertexShader,\r\n      uniforms: uniforms,\r\n      cacheKey: cacheKey\r\n    };\r\n  }, [fragmentShader, vertexShader, uniforms, cacheKey]);\r\n  var material = React.useMemo(function () {\r\n    return new CustomShaderMaterial$1(_objectSpread2(_objectSpread2({\r\n      baseMaterial: baseMaterial\r\n    }, updateProps), props));\r\n  }, [baseMaterial, updateProps]);\r\n  React.useEffect(function () {\r\n    return function () {\r\n      return material.dispose();\r\n    };\r\n  }, [material]);\r\n\r\n  // TODO: Use .update when it stop leaking memory\r\n  // useDidUpdateEffect(\r\n  //   () => material.update(updateProps),\r\n  //   [updateProps]\r\n  // )\r\n\r\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\r\n    object: material,\r\n    ref: ref,\r\n    attach: attach\r\n  }, props));\r\n});\r\n\r\nexport { CustomShaderMaterial as default };\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AACA,YAAuB;AACvB,yBAAO;AAEP,4BAAO;AACP,+BAAO;AACP,kCAAO;AAEP,SAAS,WAAW;AAClB,aAAW,OAAO,SAAS,OAAO,OAAO,KAAK,IAAI,SAAU,QAAQ;AAClE,aAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AACzC,UAAI,SAAS,UAAU,CAAC;AACxB,eAAS,OAAO,QAAQ;AACtB,YAAI,OAAO,UAAU,eAAe,KAAK,QAAQ,GAAG,GAAG;AACrD,iBAAO,GAAG,IAAI,OAAO,GAAG;AAAA,QAC1B;AAAA,MACF;AAAA,IACF;AACA,WAAO;AAAA,EACT;AACA,SAAO,SAAS,MAAM,MAAM,SAAS;AACvC;AAEA,IAAI,YAAY,CAAC,gBAAgB,kBAAkB,gBAAgB,YAAY,YAAY,QAAQ;AAWnG,IAAIA,wBAA0C,iBAAW,SAAU,MAAM,KAAK;AAC5E,MAAI,eAAe,KAAK,cACtB,iBAAiB,KAAK,gBACtB,eAAe,KAAK,cACpB,WAAW,KAAK,UAChB,WAAW,KAAK,UAChB,cAAc,KAAK,QACnB,SAAS,gBAAgB,SAAS,aAAa,aAC/C,QAAQ,yBAAyB,MAAM,SAAS;AAClD,MAAI,cAAoB,cAAQ,WAAY;AAC1C,WAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF,GAAG,CAAC,gBAAgB,cAAc,UAAU,QAAQ,CAAC;AACrD,MAAI,WAAiB,cAAQ,WAAY;AACvC,WAAO,IAAI,qBAAuB,eAAe,eAAe;AAAA,MAC9D;AAAA,IACF,GAAG,WAAW,GAAG,KAAK,CAAC;AAAA,EACzB,GAAG,CAAC,cAAc,WAAW,CAAC;AAC9B,EAAM,gBAAU,WAAY;AAC1B,WAAO,WAAY;AACjB,aAAO,SAAS,QAAQ;AAAA,IAC1B;AAAA,EACF,GAAG,CAAC,QAAQ,CAAC;AAQb,SAA0B,oBAAc,aAAa,SAAS;AAAA,IAC5D,QAAQ;AAAA,IACR;AAAA,IACA;AAAA,EACF,GAAG,KAAK,CAAC;AACX,CAAC;",
  "names": ["CustomShaderMaterial"]
}
